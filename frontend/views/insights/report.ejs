<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Insights - Election <%= election.electionNumber %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body class="bg-light">
    <div class="container my-5">
      <h2 class="mb-4 text-center">
        üìä Insights for Election #<%= election.electionNumber %>
      </h2>

      <!-- Vote Summary -->
      <div class="row mb-4">
        <div class="col-md-4">
          <div class="card shadow-sm">
            <div class="card-body text-center">
              <h6>Total Votes (All Candidates)</h6>
              <h4><%= stats.totalElectionVotes %></h4>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card shadow-sm">
            <div class="card-body text-center">
              <h6>Your Votes</h6>
              <h4 class="text-success"><%= stats.totalVotesForMe %></h4>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card shadow-sm">
            <div class="card-body text-center">
              <h6>Rejections</h6>
              <h4 class="text-danger"><%= stats.totalRejections %></h4>
            </div>
          </div>
        </div>
      </div>

      <!-- Vote Distribution -->
      <div class="card mb-5">
        <div class="card-header bg-dark text-white">
          Candidate Vote Distribution
        </div>
        <div class="card-body">
          <canvas id="voteDistributionChart"></canvas>
        </div>
      </div>

      <!-- Demographic Charts -->
      <div class="row">
        <div class="col-md-6 mb-4">
          <div class="card h-100">
            <div class="card-header">Age Groups</div>
            <div class="card-body"><canvas id="ageChart"></canvas></div>
          </div>
        </div>
        <div class="col-md-6 mb-4">
          <div class="card h-100">
            <div class="card-header">Education</div>
            <div class="card-body"><canvas id="educationChart"></canvas></div>
          </div>
        </div>
      </div>

      <!-- Policy Awareness -->
      <div class="card mb-5">
        <div class="card-header">Policy Awareness</div>
        <div class="card-body">
          <p>
            <strong>Familiar:</strong> <%=
            stats.sentiment.policyKnowledge.familiar %>
          </p>
          <p>
            <strong>Not Familiar:</strong> <%=
            stats.sentiment.policyKnowledge.unfamiliar %>
          </p>
          <% if (stats.sentiment.policyKnowledge.comments.length) { %>
          <p><strong>What voters know about your policies:</strong></p>
          <ul>
            <% stats.sentiment.policyKnowledge.comments.forEach((comment, i) =>
            { %>
            <li><%= comment %></li>
            <% }) %>
          </ul>
          <% } %>
        </div>
      </div>

      <!-- Feedback & Sentiment -->
      <div class="row">
        <div class="col-md-6">
          <h5>What voters dislike about you</h5>
          <ul>
            <% stats.sentiment.dislikes.forEach((d, i) => { %>
            <li><%= d %></li>
            <% }) %>
          </ul>
        </div>
        <div class="col-md-6">
          <h5>Voter expectations from you</h5>
          <ul>
            <% stats.sentiment.expectations.forEach((e, i) => { %>
            <li><%= e %></li>
            <% }) %>
          </ul>
        </div>
      </div>

      <div class="mt-4">
        <h5>Reasons voters gave for supporting you</h5>
        <ul>
          <% stats.sentiment.reasonForVoting.forEach((r, i) => { %>
          <li><%= r %></li>
          <% }) %>
        </ul>
      </div>

      <!-- Rejection Reasons -->
      <% if (stats.rejections.reasons.length) { %>
      <div class="mt-5">
        <h4>‚ùå Rejections Summary</h4>
        <ul>
          <% stats.rejections.reasons.forEach((reason, i) => { %>
          <li><%= reason %></li>
          <% }) %>
        </ul>
      </div>
      <% } %>
    </div>
    <script>
      const voteDistributionData = {
        labels: JSON.parse(
          "<%= JSON.stringify(Object.values(voteDistribution).map(v => v.name)) %>"
        ),
        datasets: [
          {
            label: "Votes",
            data: JSON.parse(
              "<%= JSON.stringify(Object.values(voteDistribution).map(v => v.votes)) %>"
            ),
            backgroundColor: JSON.parse(
              '<%= JSON.stringify(Object.values(voteDistribution).map(v => v.isSelf ? "rgba(40, 167, 69, 0.6)" : "rgba(0, 123, 255, 0.6)")) %>'
            ),
          },
        ],
      };
      new Chart(document.getElementById("voteDistributionChart"), {
        type: "bar",
        data: voteDistributionData,
        options: { responsive: true, plugins: { legend: { display: false } } },
      });

      const ageData = {
        labels: JSON.parse(
          "<%= JSON.stringify(Object.keys(stats.demographics.ageGroups)) %>"
        ),
        datasets: [
          {
            label: "Voters",
            data: JSON.parse(
              "<%= JSON.stringify(Object.values(stats.demographics.ageGroups)) %>"
            ),
            backgroundColor: "rgba(54, 162, 235, 0.7)",
          },
        ],
      };
      new Chart(document.getElementById("ageChart"), {
        type: "bar",
        data: ageData,
        options: { responsive: true },
      });

      const educationData = {
        labels: JSON.parse(
          "<%= JSON.stringify(Object.keys(stats.demographics.education)) %>"
        ),
        datasets: [
          {
            label: "Education Level",
            data: JSON.parse(
              "<%= JSON.stringify(Object.values(stats.demographics.education)) %>"
            ),
            backgroundColor: "rgba(255, 193, 7, 0.7)",
          },
        ],
      };
      new Chart(document.getElementById("educationChart"), {
        type: "bar",
        data: educationData,
        options: { responsive: true },
      });
    </script>
  </body>
</html>
